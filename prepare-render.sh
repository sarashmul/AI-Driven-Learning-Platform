#!/bin/bash

# AI-Driven Learning Platform - Render Deployment Preparation Script
# This script prepares the project for Render.com deployment

echo "üöÄ Preparing AI-Driven Learning Platform for Render.com deployment..."

# Check if we're in the right directory
if [ ! -f "render.yaml" ]; then
    echo "‚ùå Error: render.yaml not found!"
    echo "üìÅ Please run this script from the project root directory"
    exit 1
fi

# Create .env template for production
echo "üìù Creating production environment template..."
cat > backend/.env.production << EOF
# Production Environment Variables for Render.com
# Copy these to your Render service environment variables

# Database (will be auto-generated by Render)
DATABASE_URL=postgresql://username:password@hostname:port/database_name

# JWT Authentication (generate a secure key)
SECRET_KEY=generate-a-secure-random-key-here
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# AI Service API Keys (add your real keys)
OPENAI_API_KEY=your-openai-api-key-here
GEMINI_API_KEY=your-google-gemini-api-key-here
OPENAI_MODEL=gpt-3.5-turbo

# Application Settings
DEBUG=false
APP_NAME=AI-Driven Learning Platform

# CORS (update with your actual frontend URL)
ALLOWED_ORIGINS=https://your-frontend-name.onrender.com,http://localhost:3000

# Pagination
DEFAULT_PAGE_SIZE=10
MAX_PAGE_SIZE=100
EOF

# Check if all required files exist
echo "üîç Checking required files..."
required_files=(
    "backend/Dockerfile"
    "backend/requirements.txt"
    "backend/requirements-minimal.txt"
    "backend/alembic.ini"
    "backend/app/main.py"
    "frontend/package.json"
    "frontend/vite.config.js"
    "render.yaml"
    ".gitignore"
)

missing_files=()
for file in "${required_files[@]}"; do
    if [ ! -f "$file" ]; then
        missing_files+=("$file")
    fi
done

if [ ${#missing_files[@]} -gt 0 ]; then
    echo "‚ùå Missing required files:"
    for file in "${missing_files[@]}"; do
        echo "   - $file"
    done
    exit 1
fi

# Check .gitignore for security
echo "üîê Checking .gitignore security..."
if ! grep -q "\.env$" .gitignore; then
    echo "‚ö†Ô∏è  Warning: .env files might not be properly ignored in git"
fi

if ! grep -q "SECRET_KEY" .gitignore; then
    echo "üìù Adding additional security patterns to .gitignore..."
    echo "" >> .gitignore
    echo "# Additional security" >> .gitignore
    echo "*.key" >> .gitignore
    echo "secrets.json" >> .gitignore
fi

# Generate instructions
echo "üìã Creating deployment instructions..."
cat > RENDER_DEPLOYMENT_CHECKLIST.md << EOF
# üöÄ Render.com Deployment Checklist

## Before Deployment:

### 1. Environment Variables
Copy these environment variables to your Render services:

#### Backend Service Environment Variables:
\`\`\`
DATABASE_URL=<auto-generated-by-render>
SECRET_KEY=<generate-secure-random-key>
OPENAI_API_KEY=<your-openai-key>
DEBUG=false
ALLOWED_ORIGINS=https://your-frontend-name.onrender.com
\`\`\`

#### Frontend Service Environment Variables:
\`\`\`
VITE_API_BASE_URL=https://your-backend-name.onrender.com
\`\`\`

### 2. Generate Secure Secret Key
Run this Python command to generate a secure secret key:
\`\`\`python
import secrets
print(secrets.token_urlsafe(32))
\`\`\`

### 3. Commit and Push
\`\`\`bash
git add .
git commit -m "Ready for Render deployment"
git push origin main
\`\`\`

## Deployment Order:

1. **Database**: Deploy PostgreSQL service first
2. **Backend**: Deploy web service (Docker)
3. **Frontend**: Deploy static site
4. **Update CORS**: Add frontend URL to backend ALLOWED_ORIGINS

## Post-Deployment:

- [ ] Test user registration
- [ ] Test lesson generation
- [ ] Test admin login (admin@admin.com / admin123)
- [ ] Verify database migrations ran successfully
- [ ] Check logs for any errors

## Troubleshooting:

- Check service logs in Render dashboard
- Verify all environment variables are set
- Ensure database is connected and migrations ran
- Test API endpoints at /docs
EOF

echo "‚úÖ Deployment preparation complete!"
echo ""
echo "üìÅ Files created:"
echo "   - backend/.env.production (environment template)"
echo "   - RENDER_DEPLOYMENT_CHECKLIST.md (deployment guide)"
echo ""
echo "üîÑ Next steps:"
echo "   1. Review backend/.env.production and set your real values in Render"
echo "   2. Follow RENDER_DEPLOYMENT_CHECKLIST.md"
echo "   3. Commit and push your changes"
echo "   4. Deploy to Render using render.yaml"
echo ""
echo "üìö Full documentation: DEPLOYMENT.md"
