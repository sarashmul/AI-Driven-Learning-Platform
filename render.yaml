services:
  # PostgreSQL Database
  - type: pserv
    name: ai-learning-db
    env: postgres
    plan: free
    region: frankfurt
    databaseName: learning_platform
    databaseUser: postgres

  # Backend API Service
  - type: web
    name: ai-learning-backend
    env: docker
    region: frankfurt
    plan: free
    dockerfilePath: ./backend/Dockerfile
    dockerContext: ./backend
    healthCheckPath: /docs
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: ai-learning-db
          property: connectionString
      - key: SECRET_KEY
        generateValue: true
      - key: DEBUG
        value: false
      - key: ALGORITHM
        value: HS256
      - key: ACCESS_TOKEN_EXPIRE_MINUTES
        value: 30
      - key: OPENAI_MODEL
        value: gpt-3.5-turbo
      - key: DEFAULT_PAGE_SIZE
        value: 10
      - key: MAX_PAGE_SIZE
        value: 100
    # Environment variables that need to be set manually in Render dashboard:
    # - OPENAI_API_KEY (your OpenAI API key)
    # - GEMINI_API_KEY (your Google Gemini API key) - optional
    # - ALLOWED_ORIGINS (your frontend URL after deployment)

  # Frontend Static Site
  - type: web
    name: ai-learning-frontend
    env: static
    region: frankfurt
    buildCommand: cd frontend && npm install && npm run build
    staticPublishPath: ./frontend/dist
    headers:
      - path: /*
        name: X-Frame-Options
        value: DENY
      - path: /*
        name: X-Content-Type-Options
        value: nosniff
    envVars:
      # This will be set automatically after backend deployment
      # You'll need to update this manually in Render dashboard
      # - key: VITE_API_BASE_URL
      #   value: https://ai-learning-backend.onrender.com

# Pre-deploy commands (runs before each deployment)
preDeployCommand: |
  cd backend
  # Install dependencies
  pip install -r requirements.txt
  # Run database migrations
  python -m alembic upgrade head
